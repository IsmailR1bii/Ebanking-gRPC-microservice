syntax = "proto3";
option java_package="com.exemple.grpcspringebank.grpc.stub";

service BankService{
  //Unary Model
  rpc convert(ConvertCurrencyRequest) returns (ConvertCurrencyResponse);
  rpc getAccount(GetAccountRequest) returns (GetAccountResponse);
  rpc getListAccount(GetListAccountRequest) returns (GetListAccountResponse);
  // server streaming model
  rpc getStreamOfAccountTransactions(GetStreamOfAccountTransactionRequest) returns (stream AccountTransaction);
  // client Streaming
  rpc submitStreamOfTransactions(stream AccountTransaction) returns (PerformStreamOfTransactionsResponse);
  // bidirectional stream
  rpc executeStreamOfTransaction(stream AccountTransaction) returns (stream AccountTransaction);
  rpc submitTransaction(AccountTransaction) returns (EmptyResponse);
}

enum AccountStatus {
    CREATED=0;
    ACTIVATED=1;
    SUSPENDED=2;
    BLOCKED=3;
}
enum TransactionType {
  DEBIT = 0;
  CREDIT = 1;
}
enum TransactionStatus {
  PENDING = 0;
  EXECUTED = 1;
  REJECTED = 2;
}
enum AccountType {
  CURRENT_ACCOUNT = 0;
  SAVING_ACCOUNT = 1;
}


message Account {
  string accountId = 1;
  double balance = 2;
  int64 createAt = 3;
  AccountStatus status =4 ;
  AccountType type = 5;
  string currency = 6;
}

message AccountTransaction {
  int64 transactionId = 1;
  string accountId = 2;
  int64 transactionDate = 3;
  double amount = 4;
  TransactionType type=5;
  TransactionStatus status = 6;
}

message ConvertCurrencyRequest {
  double amount=1;
  string currencyFrom = 2;
  string currencyTo = 3;
}

message ConvertCurrencyResponse {
  double amount=1;
  string currencyFrom = 2;
  string currencyTo = 3;
  double result = 4;
}

message GetAccountRequest {
  string id = 1;
}

message GetAccountResponse {
  Account account = 1;
}

message GetListAccountRequest {}

message GetListAccountResponse {
  repeated Account accounts = 1;
}

message GetStreamOfAccountTransactionRequest {
  string accountId = 1;
}

message PerformStreamOfTransactionsResponse {
  int64 numberOfPerformedTransactions = 1;
  double totalAmountOfPerformedTransactions = 2;
  double totalAmountOfPerformedDebitTransactions = 3;
  double totalAmountOfPerformedCreditTransactions = 4;
}

message EmptyResponse{}